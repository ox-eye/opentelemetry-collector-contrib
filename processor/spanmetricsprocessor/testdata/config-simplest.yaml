# A minimal configuration where spanprocessor optional config entries are omitted,
# accepting defaults. Note that metrics are exported directly to prometheus in this case.
receivers:
  # jaeger:
  #   otlp:
  #     http:
  otlp:
    protocols:
      http:
        endpoint: "0.0.0.0:14424"
  jaeger:
    protocols:
      grpc:
        endpoint: "0.0.0.0:14278"
  zipkin:
    endpoint: "0.0.0.0:9411"


  # Dummy receiver that's never used, because a pipeline is required to have one.
  # otlp/spanmetrics:
  #   protocols:
  #     grpc:
  #       endpoint: "localhost:12345"

exporters:
  # prometheus:
  #   endpoint: "0.0.0.0:8889"

  # logging:
  #   loglevel: debug
  jaeger:
    endpoint: "localhost:14250"
    tls:
      insecure: true

processors:
  # batch:
  # spanmetrics:
  #   metrics_exporter: prometheus
  groupbytrace:
  groupbytrace/2:
    deduplication_timeout: 60
    wait_duration: 10s
    num_traces: 20000


service:
  telemetry:
    # logs:
    #   level: "debug"
    metrics:
      address: ":8888"
  pipelines:
    traces:
      receivers: [otlp]
      # spanmetrics will pass on span data untouched to next processor
      # while also accumulating metrics to be sent to the configured 'prometheus' exporter.
      processors: [groupbytrace/2]
      exporters: [jaeger]
      #processors: [spanmetrics, batch]
      #exporters: [jaeger]

    # metrics:
    #   # This receiver is just a dummy and never used.
    #   # Added to pass validation requiring at least one receiver in a pipeline.
    #   receivers: [otlp/spanmetrics]
    #   # The metrics_exporter must be present in this list.
    #   exporters: [prometheus]
